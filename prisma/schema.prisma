generator client {
  provider        = "prisma-client"
  output          = "./generated"
  moduleFormat    = "esm"
  previewFeatures = ["typedSql"]
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(ulid())
  email    String  @unique
  password String
  /// [UserData]
  data     Json
  isAdmin  Boolean @default(false)

  completions Completion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Exercise {
  id   String @id @default(ulid())
  name String

  steps       ExerciseStep[]
  completions Completion[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MessageRole {
  user
  assistant
  system
}

model ExerciseStep {
  id         String @id @default(ulid())
  exerciseId String
  order      Int
  /// [ExerciseStepContent]
  content    Json

  exercise Exercise         @relation(fields: [exerciseId], references: [id])
  steps    CompletionStep[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([exerciseId])
}

model Completion {
  id         String @id @default(ulid())
  userId     String
  exerciseId String

  user     User             @relation(fields: [userId], references: [id])
  exercise Exercise         @relation(fields: [exerciseId], references: [id])
  steps    CompletionStep[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([exerciseId])
}

model CompletionStep {
  id             String  @id @default(ulid())
  exerciseStepId String
  completionId   String
  result         String?
  completed      Boolean @default(false)

  completion   Completion            @relation(fields: [completionId], references: [id])
  exerciseStep ExerciseStep          @relation(fields: [exerciseStepId], references: [id])
  messages     ConversationMessage[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([completionId])
  @@index([exerciseStepId])
}

model ConversationMessage {
  id               String      @id @default(ulid())
  completionStepId String
  role             MessageRole
  content          String

  completionStep CompletionStep @relation(fields: [completionStepId], references: [id])

  createdAt DateTime @default(now())

  @@index([completionStepId])
}
